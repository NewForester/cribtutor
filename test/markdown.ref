
Test of the Workarounds for Markdown
    Skip [yNq] ? 

Test of Lists and Code Blocks
    Skip [yNq] ? 
I do not like this web interface. Odd, because while I generally dislike GUIs, I generally like WUIs.

This is a paragraph that contain a list: + one + two + three but this is not interpreted as I would expect.

I have tried converting such lists to html using ____-____ and ____.
Fill in 2 blanked terms:  >> pandoc, python markdown,;

These worthy Mardown to html converters do not recognise the list without the blank lines.

Although the Mardown documentation (I've read several sources) says that a blank line starts a new paragraph, both of the programs mentioned generate lists, they don't generate lists within paragraphs. Perhaps they are forced to do this because markdown talks about paragraphs within lists.

That would be a real problem for crib tutor: 

  paragraphs equate to questions: a list must fall within a paragraph to be considered a question
  paragraphs within lists might 'work' but would not be considered questions in their own right.

I tried a script that uses the GitHub API directly but my OS is too old for the old Ruby dependency. That is my fault. I'm still trying to find the original Perl Mardown interpreter.

One thing is clear on GitHub is that the blank line is required at the end of a paragraph and may be required at the beginning too.

I'm thinking of ____ it as follows:
Fill in 1 blanked term:  >> hacking,;

one, ____, three,
Fill in 1 blanked term:  >> two,;

will be ____ as a stand-alone list.
Fill in 1 blanked term:  >> interpreted,;

But ____ the hack - one, ____, three - adjacent paragraphs will be incorporated.
Fill in 2 blanked terms:  >> without,; two,;

An ordered list test case is required: 

  first,
  ____,
  third,

to round off the ____.
Fill in 2 blanked terms:  >> second,; tests,;

Also a ____ ____ test: 

    #include    <stdio.h>

    int main (int argc, char* argv [])
    {
        printf ("Hello World!\n");
        return (0);
    }

to make absolutely certain.
Fill in 1 blanked term:  >> code block,;


Test of Lists and Code Blocks
    Repeat [yNq] ? 

Code Span Tests
    Skip [yNq] ? 
Here is a ____ `code span` example.
Fill in 1 blanked term:  >> simple,;

Now for an example of embedded terms that have been translated: `____ ____`
Fill in 1 blanked term:  >> code span,;

Another example: `Eg ____ ____ QED`
Fill in 1 blanked term:  >> code span,;

Another example: `____ span`
Fill in 1 blanked term:  >> code,;

Another example: `code ____`
Fill in 1 blanked term:  >> span,;

Another example: `____/____`
Fill in 2 blanked terms:  >> code, span,;

Examples using imperfect `pandoc` translation: `____ ____`
Fill in 1 blanked term:  >> code span,;

Another example: `Eg ____ ____ QED`
Fill in 2 blanked terms:  >> code,; span,;

Another example: `**code** ____`
Fill in 1 blanked term:  >> span,;

Another example: `**____ ____**`
Fill in 1 blanked term:  >> code span,;

Another example: `big____giant`
Fill in 1 blanked term:  >> hungry,;

____ of sentence capitalisation should work inside a code span. ____ world.
Fill in 2 blanked terms:  >> start,; hello,;

`____` of sentence capitalisation should work inside a code span. `____` world.
Fill in 2 blanked terms:  >> start,; hello,;

Mini-list pairs should work with code spans: `____` or `____`.
Fill in 2 blanked terms:  >> asterisk, underscore,;


Code Span Tests
    Repeat [yNq] ? 
